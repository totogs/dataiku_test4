{
  "projectKey": "LOGSANALYSIS",
  "id": "PREVENT_PANNE",
  "type": "step_based",
  "name": "prevent_panne",
  "active": false,
  "versionTag": {
    "versionNumber": 42,
    "lastModifiedBy": {
      "login": "tony"
    },
    "lastModifiedOn": 1630341104867
  },
  "checklists": {
    "checklists": []
  },
  "delayedTriggersBehavior": {
    "delayWhileRunning": true,
    "squashDelayedTriggers": true,
    "suppressTriggersWhileRunning": true
  },
  "tags": [],
  "triggers": [
    {
      "id": "rTlWI9h7",
      "type": "temporal",
      "name": "Time-based",
      "delay": 5,
      "active": true,
      "params": {
        "repeatFrequency": 150,
        "frequency": "Minutely",
        "startingFrom": "2021-08-24T13:29:00.000Z",
        "daysOfWeek": [
          "Tuesday"
        ],
        "minute": 29,
        "hour": 15,
        "timezone": "SERVER"
      }
    }
  ],
  "reporters": [],
  "params": {
    "steps": [
      {
        "id": "custom_python_ZZ5bA39xVocFgzAZAx/XEw",
        "type": "custom_python",
        "name": "generate_data",
        "runConditionType": "RUN_IF_STATUS_MATCH",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "script": "# -------------------------------------------------------------------------------- NOTEBOOK-CELL: CODE\n# -*- coding: utf-8 -*-\nimport dataiku\nimport pandas as pd, numpy as np\nfrom dataiku import pandasutils as pdu\n\n\n# Read recipe inputs\njson_prepared \u003d dataiku.Dataset(\"data_distinct\")\ndf \u003d json_prepared.get_dataframe()\n\n# -------------------------------------------------------------------------------- NOTEBOOK-CELL: CODE\nfrom datetime import timedelta\nfrom datetime import datetime\nimport random\n\n# -------------------------------------------------------------------------------- NOTEBOOK-CELL: CODE\nmax_index \u003d len(df)-10\nrandom_index \u003d random.randint(0,max_index)\n\n# -------------------------------------------------------------------------------- NOTEBOOK-CELL: CODE\ndf_generated \u003d df[random_index:random_index+10]\n\n# -------------------------------------------------------------------------------- NOTEBOOK-CELL: CODE\nactualdate \u003d df[\"date\"].max()\nlistdate \u003d []\nfor i in range(len(df_generated)):\n    actualdate \u003d actualdate + timedelta(minutes\u003d15)\n    listdate.append(actualdate)\n\n# -------------------------------------------------------------------------------- NOTEBOOK-CELL: CODE\nlistdate.reverse()\ndf_generated[\"date\"] \u003d listdate\n\n# -------------------------------------------------------------------------------- NOTEBOOK-CELL: CODE\ndf_generated\n\n# -------------------------------------------------------------------------------- NOTEBOOK-CELL: CODE\n# Compute recipe outputs\n# TODO: Write here your actual code that computes the outputs\n# NB: DSS supports several kinds of APIs for reading and writing data. Please see doc.\n\n\n# Write recipe outputs\ndata_generated \u003d dataiku.Dataset(\"data_generated\")\ndata_generated.write_with_schema(df_generated)",
          "envSelection": {
            "envMode": "INHERIT"
          },
          "proceedOnFailure": false
        }
      },
      {
        "id": "build_0_true_d_data_genrerated_prediction",
        "type": "build_flowitem",
        "name": "prediction_generated",
        "runConditionType": "DISABLED",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "builds": [
            {
              "type": "DATASET",
              "itemId": "data_genrerated_prediction",
              "partitionsSpec": ""
            }
          ],
          "jobType": "NON_RECURSIVE_FORCED_BUILD",
          "refreshHiveMetastore": true,
          "proceedOnFailure": false
        }
      },
      {
        "id": "custom_python_hAmYJ8S1/U5k9vZ/x9jqAg",
        "type": "custom_python",
        "name": "add data to json stacked",
        "runConditionType": "DISABLED",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "script": "# -*- coding: utf-8 -*-\nimport dataiku\nimport pandas as pd, numpy as np\nfrom dataiku import pandasutils as pdu\n\n# Read recipe inputs\ndata_generated \u003d dataiku.Dataset(\"data_generated\")\ndata_generated_df \u003d data_generated.get_dataframe()\n\n# Read recipe inputs\njson_stacked \u003d dataiku.Dataset(\"json_stacked_distinct\")\njson_stacked_df \u003d json_stacked.get_dataframe()\n\njson_stacked_df \u003d json_stacked_df.append(data_generated_df)\n\njson_stacked.write_with_schema(json_stacked_df)",
          "envSelection": {
            "envMode": "INHERIT"
          },
          "proceedOnFailure": false
        }
      },
      {
        "id": "build_0_true_d_json_stacked_distinct_f_dHoUQGRB",
        "type": "build_flowitem",
        "name": "Retrain model",
        "runConditionType": "DISABLED",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "builds": [],
          "jobType": "NON_RECURSIVE_FORCED_BUILD",
          "refreshHiveMetastore": true,
          "proceedOnFailure": false
        }
      },
      {
        "id": "build_1_true_f_dHoUQGRB",
        "type": "build_flowitem",
        "name": "Step #5",
        "runConditionType": "DISABLED",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "builds": [
            {
              "type": "MANAGED_FOLDER",
              "itemId": "dHoUQGRB",
              "partitionsSpec": ""
            }
          ],
          "jobType": "NON_RECURSIVE_FORCED_BUILD",
          "refreshHiveMetastore": true,
          "proceedOnFailure": false
        }
      }
    ]
  },
  "automationLocal": false,
  "customFields": {}
}